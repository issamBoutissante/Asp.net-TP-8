//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asp.net_MVC_TP_8_EF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GestionArticlesEntities : DbContext
    {
        public GestionArticlesEntities()
            : base("name=GestionArticlesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Article> Articles { get; set; }
    
        public virtual int AfficherLeSeuil(Nullable<int> numArt, ObjectParameter sMin, ObjectParameter sMax)
        {
            var numArtParameter = numArt.HasValue ?
                new ObjectParameter("numArt", numArt) :
                new ObjectParameter("numArt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AfficherLeSeuil", numArtParameter, sMin, sMax);
        }
    
        public virtual int AfficherQttArticle(Nullable<int> numArt, ObjectParameter qtt)
        {
            var numArtParameter = numArt.HasValue ?
                new ObjectParameter("numArt", numArt) :
                new ObjectParameter("numArt", typeof(int));
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AfficherQttArticle", numArtParameter, qtt);
        }
    
        public virtual int CalculerMontant(Nullable<int> numArt, Nullable<int> qtt, ObjectParameter montant)
        {
            var numArtParameter = numArt.HasValue ?
                new ObjectParameter("numArt", numArt) :
                new ObjectParameter("numArt", typeof(int));
    
            var qttParameter = qtt.HasValue ?
                new ObjectParameter("Qtt", qtt) :
                new ObjectParameter("Qtt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculerMontant", numArtParameter, qttParameter, montant);
        }
    }
}
